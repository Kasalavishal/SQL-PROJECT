CREATE DATABASE VISHALASSIGNMENT5
USE VISHALASSIGNMENT5
CREATE TABLE CUSTOMERS_TABLE(
CustomerID INT PRIMARY KEY,
CUSTOMERS_NAME VARCHAR(50),
Email VARCHAR(100));

CREATE TABLE ORDERS_TABLE(
OrderID INT PRIMARY KEY,
CustomerID INT,
ProductName VARCHAR(50),
OrderDate DATE,
Quantity INT,
FOREIGN KEY (CustomerID) REFERENCES Customers_TABLE(CustomerID));

CREATE TABLE PRODUCTS_TABLE(
ProductID INT PRIMARY KEY,
ProductName VARCHAR(50),
Price DECIMAL(10, 2));

INSERT INTO CUSTOMERS_TABLE(CustomerID, CUSTOMERS_NAME, Email)
VALUES
(1, 'John Doe', 'johndoe@example.com'),
(2, 'Jane Smith', 'janesmith@example.com'),
(3, 'Robert Johnson', 'robertjohnson@example.com'),
(4, 'Emily Brown', 'emilybrown@example.com'),
(5, 'Michael Davis', 'michaeldavis@example.com'),
(6, 'Sarah Wilson', 'sarahwilson@example.com'),
(7, 'David Thompson', 'davidthompson@example.com'),
(8, 'Jessica Lee', 'jessicalee@example.com'),
(9, 'William Turner', 'williamturner@example.com'),
(10, 'Olivia Martinez', 'oliviamartinez@example.com'),
(11, 'James Anderson', 'jamesanderson@example.com'),
(12, 'Kelly Clarkson', 'kellyclarkson@example.com');

INSERT INTO PRODUCTS_TABLE(ProductID, ProductName, Price)
VALUES
(1, 'Product A', 10.99),
(2, 'Product B', 8.99),
(3, 'Product C', 5.99),
(4, 'Product D', 12.99),
(5, 'Product E', 7.99),
(6, 'Product F', 6.99),
(7, 'Product G', 9.99),
(8, 'Product H', 11.99),
(9, 'Product I', 14.99),
(10, 'Product J', 4.99),
(11, 'Product K', 3.99),
(12, 'Product L', 15.99);

INSERT INTO ORDERS_TABLE(OrderID, CustomerID, ProductName, OrderDate, Quantity)
VALUES
(1, 1, 'Product A', '2023-07-01', 5),
(2, 2, 'Product B', '2023-07-02', 3),
(3, 3, 'Product C', '2023-07-03', 2),
(4, 4, 'Product A', '2023-07-04', 1),
(5, 5, 'Product B', '2023-07-05', 4),
(6, 6, 'Product C', '2023-07-06', 2),
(7, 7, 'Product A', '2023-07-07', 3),
(8, 8, 'Product B', '2023-07-08', 2),
(9, 9, 'Product C', '2023-07-09', 5),
(10, 10, 'Product A', '2023-07-10', 1),
(11, 11, 'Product D', '2023-07-10', 3),
(12, 12, 'Product E', '2023-07-11', 6),
(13, 5, 'Product G', '2023-07-12', 2),
(14, 4, 'Product H', '2023-07-13', 4),
(15, 6, 'Product I', '2023-07-14', 3)

--TASK1
--1
SELECT * FROM CUSTOMERS_TABLE
--2
SELECT CUSTOMERS_NAME, EMAIL FROM CUSTOMERS_TABLE
WHERE CUSTOMERS_NAME LIKE 'J%'
--3
SELECT ORDERID, PRODUCTNAME, QUANTITY FROM ORDERS_TABLE
--4
SELECT SUM(QUANTITY) AS TOTAL_QUAN FROM ORDERS_TABLE
--5
SELECT * FROM CUSTOMERS_TABLE
SELECT * FROM ORDERS_TABLE
SELECT C.CUSTOMERS_Name
FROM CUSTOMERS_TABLE C
INNER JOIN ORDERS_TABLE O ON C.CustomerID = O.CustomerID
--6
SELECT * FROM PRODUCTS_TABLE
WHERE Price > 10.00
--8
SELECT AVG(PRICE) AS AVG_PRICE FROM PRODUCTS_TABLE
--7
SELECT C.CUSTOMERS_NAME,O.ORDERDATE 
FROM CUSTOMERS_TABLE C
INNER JOIN ORDERS_TABLE O ON
C.CUSTOMERID =  O.CUSTOMERID
WHERE ORDERDATE >= '2023-07-05'
--10
SELECT * FROM PRODUCTS_TABLE
SELECT * FROM ORDERS_TABLE
SELECT P.PRODUCTNAME
FROM PRODUCTS_TABLE P
LEFT JOIN ORDERS_TABLE O ON P.ProductName = O.ProductName
WHERE O.PRODUCTNAME IS NULL

--TASK2
--1
SELECT * FROM CUSTOMERS_TABLE
SELECT * FROM ORDERS_TABLE
SELECT TOP 5 C.CUSTOMERS_NAME, SUM(O.QUANTITY) AS TOTAL_QUAN FROM ORDERS_TABLE O
JOIN CUSTOMERS_TABLE C ON O.CUSTOMERID = C.CustomerID
GROUP BY C.CUSTOMERS_NAME
ORDER BY SUM(O.Quantity) DESC
--2
SELECT * FROM PRODUCTS_TABLE
SELECT AVG(PRICE) AS AVG_PRICE FROM PRODUCTS_TABLE
--3
SELECT * FROM CUSTOMERS_TABLE
SELECT * FROM ORDERS_TABLE
SELECT C.CUSTOMERS_NAME , C.CUSTOMERID
FROM ORDERS_TABLE o
left join CUSTOMERS_TABLE C ON C.CustomerID = O.CustomerID
WHERE O.OrderID IS NULL
--4
SELECT * FROM ORDERS_TABLE
SELECT * FROM CUSTOMERS_TABLE
SELECT O.ORDERID, O.PRODUCTNAME, O.QUANTITY, C.CUSTOMERS_NAME
FROM CUSTOMERS_TABLE C
INNER JOIN ORDERS_TABLE O ON O.CUSTOMERID = C.CustomerID
WHERE CUSTOMERS_NAME LIKE 'M%'
--5
SELECT * FROM ORDERS_TABLE
SELECT * FROM PRODUCTS_TABLE
SELECT O.ORDERID, SUM(P.PRICE * O.QUANTITY) AS TOTAL_REN FROM ORDERS_TABLE O
JOIN PRODUCTS_TABLE P ON O.PRODUCTNAME = P.PRODUCTNAME
GROUP BY O.OrderID
--9
SELECT * FROM PRODUCTS_TABLE
SELECT * FROM ORDERS_TABLE
SELECT TOP 3 P.PRODUCTNAME , AVG(O.QUANTITY) 
FROM PRODUCTS_TABLE P 
JOIN ORDERS_TABLE O ON P.ProductName = O.ProductName
GROUP BY P.ProductName
ORDER BY AVG(O.QUANTITY) DESC
--10
